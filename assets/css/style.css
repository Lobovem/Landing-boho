/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{
  line-height:1.15;
  -webkit-text-size-adjust:100%;
}
body{
  margin:0;
}
main{
  display:block;
}
h1{
  font-size:2em;
  margin:0.67em 0;
}
hr{
  box-sizing:content-box;
  height:0;
  overflow:visible;
}
pre{
  font-family:monospace, monospace;
  font-size:1em;
}
a{
  background-color:transparent;
}
abbr[title]{
  border-bottom:none;
  text-decoration:underline;
  text-decoration:underline dotted;
}
b,
strong{
  font-weight:bolder;
}
code,
kbd,
samp{
  font-family:monospace, monospace;
  font-size:1em;
}
small{
  font-size:80%;
}
sub,
sup{
  font-size:75%;
  line-height:0;
  position:relative;
  vertical-align:baseline;
}

sub{
  bottom:-0.25em;
}

sup{
  top:-0.5em;
}
img{
  border-style:none;
}
button,
input,
optgroup,
select,
textarea{
  font-family:inherit;
  font-size:100%;
  line-height:1.15;
  margin:0;
}
button,
input{
  overflow:visible;
}
button,
select{
  text-transform:none;
}
button,
[type=button],
[type=reset],
[type=submit]{
  -webkit-appearance:button;
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner{
  border-style:none;
  padding:0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring{
  outline:1px dotted ButtonText;
}
fieldset{
  padding:0.35em 0.75em 0.625em;
}
legend{
  box-sizing:border-box;
  color:inherit;
  display:table;
  max-width:100%;
  padding:0;
  white-space:normal;
}
progress{
  vertical-align:baseline;
}
textarea{
  overflow:auto;
}
[type=checkbox],
[type=radio]{
  box-sizing:border-box;
  padding:0;
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button{
  height:auto;
}
[type=search]{
  -webkit-appearance:textfield;
  outline-offset:-2px;
}
[type=search]::-webkit-search-decoration{
  -webkit-appearance:none;
}
::-webkit-file-upload-button{
  -webkit-appearance:button;
  font:inherit;
}
details{
  display:block;
}
summary{
  display:list-item;
}
template{
  display:none;
}
[hidden]{
  display:none;
}

@font-face{
  font-family:"Inter";
  font-weight:800;
  font-style:normal;
  font-display:swap;
  src:url("../fonts/Inter-ExtraBold-800.woff2") format("woff2");
}
@font-face{
  font-family:"Inter";
  font-weight:600;
  font-style:normal;
  font-display:swap;
  src:url("../fonts/Inter-SemiBold-600.woff2") format("woff2");
}
@font-face{
  font-family:"Inter";
  font-weight:500;
  font-style:normal;
  font-display:swap;
  src:url("../fonts/Inter-Medium-500.woff2") format("woff2");
}
@font-face{
  font-family:"Inter";
  font-weight:400;
  font-style:normal;
  font-display:swap;
  src:url("../fonts/Inter-Regular-400.woff2") format("woff2");
}
@font-face{
  font-family:"Begika";
  font-weight:400;
  font-style:normal;
  font-display:swap;
  src:url("../fonts/Begika.woff2") format("woff2");
}
.visually-hidden{
  position:absolute;
  overflow:hidden;
  clip:rect(0 0 0 0);
  width:1px;
  height:1px;
  margin:-1px;
  padding:0;
  white-space:nowrap;
  border:0;
  clip-path:inset(100%);
}

*,
*::before,
*::after{
  box-sizing:border-box;
  margin:0;
  padding:0;
}

html{
  font-family:"Inter", sans-serif;
  font-size:16px;
  font-weight:normal;
  font-style:normal;
}

a{
  text-decoration:none;
  color:#000000;
}

.body{
  background:#1F2D28;
}

.layout__main{
  width:min(100% - 80px, 1640px);
  margin-inline:auto;
}
.layout__main--alt{
  margin-top:-140px;
}

.decor__left{
  position:absolute;
  left:0;
  z-index:2;
}
.decor__right{
  position:absolute;
  right:0;
  z-index:2;
}
.decor__main{
  position:relative;
  background-image:url(../img/background-main-foto.png);
  background-repeat:no-repeat;
  background-position:50% 0%;
  background-size:100%;
}
.decor__main::before{
  position:absolute;
  content:"";
  bottom:0;
  height:150px;
  left:0;
  right:0;
  z-index:5;
  background:linear-gradient(180deg, rgba(15, 24, 21, 0) 0%, #1F2D28 100%);
}

.actions{
  max-width:790px;
}
.actions__logo{
  padding-top:60px;
  max-width:127px;
}
.actions__title{
  font-weight:600;
  font-size:40px;
  line-height:48px;
  text-align:center;
  letter-spacing:0.1em;
  color:#EBBC44;
  text-shadow:0px 0px 0px #FCC931;
}
.actions__desc{
  font-family:"Begika";
  font-style:normal;
  font-weight:400;
  font-size:90px;
  line-height:100%;
  text-align:center;
  letter-spacing:0.1em;
  text-transform:uppercase;
  color:#FFFFFF;
}
.actions__link-box{
  position:relative;
  z-index:10;
  padding:3px;
  min-height:92px;
  width:392px;
  background:linear-gradient(93.73deg, #FFF387 4%, #D7A82E 30%, #FFF387 45%, #F4C449 70%, #FFF387 100%);
}
.actions__link{
  display:flex;
  align-items:center;
  justify-content:center;
  font-weight:800;
  font-size:34px;
  line-height:41px;
  text-align:center;
  letter-spacing:0.15em;
  text-transform:uppercase;
  border:none;
  cursor:pointer;
  color:#0F101B;
  padding:10px;
  min-height:86px;
  width:386px;
  background:linear-gradient(93.73deg, #FFC93D 0.41%, #CC9F2A 31.75%, #F5C64E 67.8%, #F0BC38 93.39%);
}

.header{
  position:relative;
}
.header__wrap{
  position:relative;
  z-index:5;
}
.header__contant{
  display:flex;
  gap:80px;
  position:relative;
  z-index:3;
}
.header__img-box{
  position:relative;
  max-height:100vh;
}
.header__img-box::before{
  position:absolute;
  content:"";
  bottom:0;
  height:150px;
  left:0;
  right:0;
  z-index:5;
  background:linear-gradient(180deg, rgba(15, 24, 21, 0) 0%, #1F2D28 100%);
}
.header__img{
  position:relative;
  max-width:100%;
  max-height:100%;
  display:block;
}
.header__item-wrap{
  position:relative;
  z-index:3;
}
.item__wrap{
  gap:20px;
  position:relative;
  z-index:5;
  display:grid;
  grid-template-columns:repeat(4, 1fr);
  margin-bottom:90px;
}
.item__box-first{
  display:flex;
  justify-content:center;
  align-items:flex-end;
  height:100%;
}
.item__box-second{
  display:flex;
  justify-content:center;
  align-items:flex-start;
  height:100%;
}
.item__box{
  min-height:320px;
  display:flex;
  flex-direction:column;
  align-items:center;
  gap:40px;
  background:rgba(255, 255, 255, 0.03);
  backdrop-filter:blur(18.5px);
  border-radius:25px;
  padding:10px 10px 10px 10px;
}
.item__img{
  max-width:80px;
  display:flex;
}
.item__title{
  font-weight:500;
  font-size:32px;
  line-height:120%;
  max-width:254px;
  text-align:center;
  letter-spacing:0.05em;
  text-transform:uppercase;
  color:#FFFFFF;
}

.footer__wrap{
  padding-bottom:80px;
  padding-top:54px;
  display:flex;
  gap:60px;
  align-items:center;
}
.footer__img{
  max-width:213px;
}
.footer__decs{
  font-weight:400;
  font-size:18px;
  line-height:160%;
  letter-spacing:0.05em;
  text-transform:capitalize;
  color:#6D6D71;
}

.slider{
  position:relative;
}
.slider__wrap{
  margin-bottom:38px;
}
.slider__item{
  padding:10px 10px;
  min-height:177px;
  background:#36403C;
  border-radius:4px;
  display:flex;
  justify-content:center;
  align-items:center;
  min-width:0;
}
.slider__img{
  max-width:80%;
}
.slider .swiper-wrapper{
  padding-bottom:25px;
}
.slider .swiper-pagination-bullet{
  background:#36403C;
  height:14px;
  width:14px;
}
.slider .swiper-pagination-bullet-active{
  background:#FBBF2F;
}
@media (min-width: 992px){
  .actions{
    align-items:flex-start;
    justify-items:center;
    display:grid;
    gap:20px;
    grid-template-rows:0.6fr 0.3fr 0.65fr 1fr;
  }
}
@media (min-width: 1380.8px){
  .header{
    min-height:720px;
    height:100vh;
    max-height:1200px;
  }
}
@media (min-width: 1401px){
  .actions{
    grid-template-rows:0.6fr 0.3fr 0.5fr 1fr;
  }
}
@media (max-width: 1600.8px){
  .actions__title{
    font-size:32px;
    line-height:39px;
  }
  .actions__desc{
    font-size:71px;
  }
  .actions__link-box{
    min-height:76px;
    width:307px;
  }
  .actions__link{
    font-size:24px;
    line-height:29px;
    min-height:70px;
    width:301px;
  }
}
@media (max-width: 1600px){
  .slider__item{
    min-height:119px;
  }
}
@media (max-width: 1500.8px){
  .decor__main::before{
    height:80px;
  }
}
@media (max-width: 1400.8px){
  .layout__main--alt{
    margin-top:-140px;
  }
  .decor__left{
    max-width:371px;
  }
  .decor__right{
    max-width:266px;
  }
  .header__contant{
    gap:40px;
  }
  .header__img-box{
    margin-left:60px;
  }
  .item__wrap{
    margin-bottom:54px;
  }
  .item__box{
    min-height:280px;
  }
  .item__img{
    max-width:70px;
  }
  .item__title{
    font-size:24px;
    max-width:191px;
  }
  .footer__wrap{
    padding-bottom:30px;
    gap:20px;
  }
  .footer__img{
    max-width:203px;
  }
  .footer__decs{
    font-size:16px;
  }
}
@media (max-width: 1380.8px){
  .layout__main--alt{
    margin-top:-40px;
  }
  .header__img-box::before{
    height:70px;
  }
}
@media (max-width: 1250.8px){
  .actions__title{
    font-size:26px;
  }
  .actions__desc{
    font-size:50px;
  }
  .actions__link{
    font-size:20px;
    line-height:29px;
  }
}
@media (max-width: 1100px){
  .slider__img{
    max-width:90%;
  }
}
@media (max-width: 991.8px){
  .decor__left{
    max-width:155px;
  }
  .decor__right{
    max-width:120px;
  }
  .actions{
    flex:1;
    display:flex;
    flex-direction:column;
    align-items:center;
  }
  .actions__logo{
    margin-bottom:30px;
    max-width:84px;
    padding-top:40px;
  }
  .actions__title{
    font-size:20px;
    line-height:24px;
    margin-bottom:20px;
  }
  .actions__desc{
    margin-bottom:20px;
    max-width:440px;
  }
  .actions__link-box{
    min-height:62px;
    width:235px;
  }
  .actions__link{
    font-size:18px;
    line-height:22px;
    min-height:56px;
    width:229px;
  }
  .header__contant{
    gap:20px;
  }
  .header__img-box{
    margin-left:-90px;
  }
  .header__img{
    max-width:350px;
  }
  .item__wrap{
    grid-template-columns:repeat(2, 1fr);
  }
  .footer__wrap{
    flex-direction:column;
    padding-bottom:20px;
    gap:15px;
  }
  .footer__img{
    order:1;
  }
  .footer__decs{
    text-align:center;
    order:0;
  }
}
@media (max-width: 991.8px) and (min-width: 992px){
  .header__img-box{
    flex:1;
  }
}
@media (max-width: 810px){
  .slider__img{
    max-width:100%;
  }
}
@media (max-width: 767.8px){
  .layout__main{
    width:min(100% - 40px, 1640px);
  }
  .decor__main::before{
    height:50px;
  }
  .actions__logo{
    margin-bottom:20px;
  }
  .actions__desc{
    font-size:38px;
  }
  .header__wrap{
    margin-bottom:16px;
  }
  .header__img{
    max-width:275px;
  }
  .item__wrap{
    margin-bottom:20px;
  }
  .footer__img{
    max-width:125px;
  }
  .slider::before{
    position:absolute;
    content:"";
    right:0;
    bottom:0;
    top:0;
    z-index:10;
    width:80px;
    background:linear-gradient(270deg, #1F2D28 0%, rgba(31, 45, 40, 0) 100%);
  }
  .slider__item{
    min-height:107px;
  }
  .slider__img{
    max-width:80%;
  }
}
@media (max-width: 767.8px) and (max-width: 399.8px){
  .slider::before{
    display:none;
  }
}
@media (max-width: 620.8px){
  .decor__main{
    background-size:200%;
    background-position:50% 0%;
  }
}
@media (max-width: 600.8px){
  .item__box{
    min-height:180px;
    gap:20px;
  }
  .item__img{
    max-width:40px;
  }
  .item__title{
    font-size:16px;
    max-width:127px;
  }
  .footer__wrap{
    padding-top:20px;
  }
  .footer__decs{
    font-size:12px;
  }
  .slider .swiper-wrapper{
    padding-bottom:15px;
  }
  .slider .swiper-pagination-bullet{
    height:8px;
    width:8px;
  }
}
@media (max-width: 576.8px){
  .layout__main--alt{
    margin-top:0;
  }
  .actions__link-box{
    width:100%;
  }
  .actions__link{
    width:100%;
  }
  .header__wrap{
    margin-bottom:24px;
  }
  .header__img-box{
    display:none;
  }
}
@media (max-width: 520px){
  .slider__img{
    max-width:90%;
  }
}
@media (max-width: 479.8px){
  .decor__left{
    max-width:118px;
  }
  .decor__right{
    max-width:98px;
  }
  .actions__title{
    font-size:15px;
    line-height:18px;
    margin-bottom:10px;
  }
  .actions__desc{
    font-size:33px;
    margin-bottom:10px;
    max-width:390px;
  }
  .actions__link{
    font-size:20px;
    line-height:24px;
  }
  .footer__img{
    max-width:103px;
  }
  .slider__item{
    min-height:78px;
  }
}
@media (max-width: 419.8px){
  .layout__main{
    width:min(100% - 20px, 1640px);
  }
  .item__wrap{
    gap:10px;
    margin-bottom:24px;
  }
  .item__box{
    min-height:138px;
  }
  .item__img{
    max-width:35px;
  }
  .item__title{
    font-size:14px;
    max-width:111px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */